// Code generated by mockery v1.0.0. DO NOT EDIT.
package datastoreclient

import datastore "cloud.google.com/go/datastore"
import mock "github.com/stretchr/testify/mock"

// MockDataStorerIterator is an autogenerated mock type for the DataStorerIterator type
type MockDataStorerIterator struct {
	mock.Mock
}

// Cursor provides a mock function with given fields:
func (_m *MockDataStorerIterator) Cursor() (datastore.Cursor, error) {
	ret := _m.Called()

	var r0 datastore.Cursor
	if rf, ok := ret.Get(0).(func() datastore.Cursor); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(datastore.Cursor)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Next provides a mock function with given fields: dst
func (_m *MockDataStorerIterator) Next(dst interface{}) (*datastore.Key, error) {
	ret := _m.Called(dst)

	var r0 *datastore.Key
	if rf, ok := ret.Get(0).(func(interface{}) *datastore.Key); ok {
		r0 = rf(dst)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*datastore.Key)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(dst)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
