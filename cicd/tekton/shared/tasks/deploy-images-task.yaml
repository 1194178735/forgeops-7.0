apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy-images
spec:
  inputs:
    resources:
    - name: forgeops
      type: git
    params:
    - name: profile
      type: string
      description: profile to deploy
      
    - name: docker-repo
      type: string
      description: Docker repository URL
      
  stepTemplate:
    env:
    - name: SLACK_FAILED_WEBHOOK_URL
      valueFrom:
        secretKeyRef:
          name: slack-webhook
          key: SLACK_FAILED_WEBHOOK_URL
  steps:
  # Executes skaffold with the kaniko builder to build in cluster
  - name: delete-current-env
    image: "gcr.io/engineering-devops/skaffold:latest"
    script: |
      #!/usr/bin/env bash
      {
        cd /workspace/forgeops
        skaffold -f skaffold.yaml -p $(inputs.params.profile) delete
      } || { #If something fails
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Skaffold failed to delete old environment. See pipeline logs"}' $SLACK_FAILED_WEBHOOK_URL
        exit 1
      }

  - name: clean-pvcs-secrets
    image: gcr.io/cloud-builders/kubectl
    script: |
      #!/usr/bin/env bash
      {
        cd /workspace/forgeops/bin
        ./clean.sh $(inputs.params.profile)
      } || {
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Warning: clean.sh failed to cleanup environment"}' $SLACK_FAILED_WEBHOOK_URL
        exit 1
      }
      
  - name: deploy-new-env
    image: "gcr.io/engineering-devops/skaffold:latest"
    script: |
      #!/usr/bin/env bash
      {
        cd /workspace/forgeops
        cd bin
        ./config.sh init -v 7.0 -p cdk
        cd ..
        sleep 30
        skaffold -f skaffold.yaml -p $(inputs.params.profile) --default-repo=$(inputs.params.docker-repo) --status-check=false run
      } || {
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Skaffold failed to deploy new environment. See pipeline logs"}' $SLACK_FAILED_WEBHOOK_URL
        exit 1
      }
      
