# Deploys multi-cluster DS: ds-cts and ds-idrepo
# The namespace must be identical for all regions
namespace: prod
resources:
  - ../../../base/kustomizeConfig
  - ../multi-cluster-secrets
  - ../../../base/7.0/ds/idrepo
  - ../../../base/7.0/ds/cts 

# The name of the services for both ds (ds-cts, ds-idrepo) are modified to include the region as a suffix
# The new name must match the 'subdomain' value in the corresponding StatefulSet (in 'patchesStrategicMerge' section)
patches:
- target:
    kind: Service
    name: ds-idrepo
  patch: |-
    - op: replace
      path: /metadata/name
      value: ds-idrepo-eu
    - op: add
      path: /spec/ports/5
      value: { "name": "replication", "port": 8989 }
- target:
    kind: Service
    name: ds-cts
  patch: |-
    - op: replace
      path: /metadata/name
      value: ds-cts-eu
    - op: add
      path: /spec/ports/5
      value: { "name": "replication", "port": 8989 }

patchesStrategicMerge:
  - |-
    #Patch DS CTS
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: ds-cts
    spec:
      replicas: 2
      template:
        spec:
          containers:
            - name: ds
              imagePullPolicy: Always
              resources:
                requests:
                  memory: 4Gi
                  cpu: 2
                limits:
                  memory: 4Gi
                  cpu: 2
              env: 
              - name: DS_CLUSTER_TOPOLOGY
                value: "eu,us"
              - name: MCS_ENABLED
                value: "true"
          initContainers:
            - name: initialize
              imagePullPolicy: Always
      volumeClaimTemplates:
      - metadata:
          name: data
          annotations:
            pv.beta.kubernetes.io/gid: "0"
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 250Gi
  - |-
    #Patch DS IDREPO
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: ds-idrepo
    spec:
      replicas: 2
      template:
        spec:
          containers:
            - name: ds
              imagePullPolicy: Always
              resources:
                requests:
                  memory: 4Gi
                  cpu: 2
                limits:
                  memory: 4Gi
                  cpu: 2
              env: 
              - name: DS_CLUSTER_TOPOLOGY
                value: "eu,us"
              - name: MCS_ENABLED
                value: "true"
          initContainers:
            - name: initialize
              imagePullPolicy: Always
      volumeClaimTemplates:
      - metadata:
          name: data
          annotations:
            pv.beta.kubernetes.io/gid: "0"
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 10Gi