# Skaffold using the Kaniko builder. This avoids the need to run docker on your local machine
# Kaniko will build the docker image by launcing a pod in your Kubernetes cluster
#
# You must create a secret for Kaniko that allows it to push and pull images to your
# docker registry. The procedure for GCP:
# Create a service account that has rights to pull/push images to gcr.io/your-registry
# Download the service account json. Rename the file to kaniko-secret (no .json on the filename)
# Create a K8S secret:  kubectl create secret generic kaniko-secret --from-file=kaniko-secret
#
# You may need to run skaffold with --default-repo gcr.io/your-repo, or modify your ~/.skaffold/config to use this repo.
# See https://skaffold.dev
apiVersion: skaffold/v2alpha1
kind: Config
build:
  artifacts:
  - image: am
    context: docker/7.0/am
    kaniko: &kaniko-opts
      cache: {}
      image: gcr.io/kaniko-project/executor:v0.18.0
      flags:
        - '--single-snapshot'
  - image: amster
    context: docker/7.0/amster
    kaniko: *kaniko-opts
  - image: idm
    context: docker/7.0/idm
    kaniko: *kaniko-opts
  - image: ds-cts
    context: docker/7.0/ds/cts
    kaniko: *kaniko-opts
  - image: ds-idrepo
    context: docker/7.0/ds/idrepo
    kaniko: *kaniko-opts
  - image: forgeops-secrets
    context: docker/forgeops-secrets
    kaniko: *kaniko-opts
  cluster:
    # This secret has a key called kaniko-secret that contains *kaniko-opts
    pullSecretName: kaniko-secret
  tagPolicy:
    sha256: {}

deploy:
  kustomize:
    path: ./kustomize/overlay/7.0/all

# This uses a profile that is generated for the dev env.
# Should the dev/ folder be outside of /workspace/forgeops so that it is preserved (a PVC)
profiles:
- name: dev
  # activate if we are running the pod...
  # Todo: how else should we activate?
  activation:
  - env: USER=forgeorock
  deploy:
    # Use the generated kustomization..
    kustomize:
        path: ./dev
