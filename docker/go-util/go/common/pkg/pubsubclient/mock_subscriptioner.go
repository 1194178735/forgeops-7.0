// Code generated by mockery v1.0.0. DO NOT EDIT.
package pubsubclient

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockSubscriptioner is an autogenerated mock type for the Subscriptioner type
type MockSubscriptioner struct {
	mock.Mock
}

// Exists provides a mock function with given fields: ctx
func (_m *MockSubscriptioner) Exists(ctx context.Context) (bool, error) {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Receive provides a mock function with given fields: ctx, f
func (_m *MockSubscriptioner) Receive(ctx context.Context, f func(context.Context, Messager)) error {
	ret := _m.Called(ctx, f)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, func(context.Context, Messager)) error); ok {
		r0 = rf(ctx, f)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// String provides a mock function with given fields:
func (_m *MockSubscriptioner) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
